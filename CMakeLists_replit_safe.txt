cmake_minimum_required(VERSION 3.15)

project(AutoTunePlugin VERSION 1.0.0)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Safe build for Replit environment - testing functionality
message(STATUS "Building AutoTune Plugin for Replit environment (testing only)")

# Add JUCE
include(FetchContent)
FetchContent_Declare(
    JUCE
    URL https://github.com/juce-framework/JUCE/archive/refs/tags/7.0.9.zip
    DOWNLOAD_EXTRACT_TIMESTAMP true
)

# Configure JUCE for headless build
set(JUCE_BUILD_EXTRAS OFF CACHE BOOL "" FORCE)
set(JUCE_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE) 
set(JUCE_ENABLE_MODULE_SOURCE_GROUPS OFF CACHE BOOL "" FORCE)
set(JUCE_BUILD_HELPER_TOOLS OFF CACHE BOOL "" FORCE)
set(JUCE_COPY_PLUGIN_AFTER_BUILD OFF CACHE BOOL "" FORCE)

FetchContent_MakeAvailable(JUCE)

# Find Eigen3 (installed via packager)
find_path(EIGEN3_INCLUDE_DIR Eigen/Dense
    PATHS 
        /nix/store/*/include/eigen3
        /nix/store/*/include
        /home/runner/.nix-profile/include/eigen3
        /nix/var/nix/profiles/default/include/eigen3
    PATH_SUFFIXES eigen3
)

# Report findings
if(EIGEN3_INCLUDE_DIR)
    message(STATUS "Found Eigen3: ${EIGEN3_INCLUDE_DIR}")
    set(HAS_EIGEN3 TRUE)
else()
    message(WARNING "Eigen3 not found - using fallback math")
    set(HAS_EIGEN3 FALSE)
endif()

# Disable all external dependencies for safe Replit testing
set(HAS_ONNX FALSE)
set(HAS_RUBBERBAND FALSE)
set(HAS_CREPE FALSE)
set(HAS_DDSP FALSE)

message(STATUS "Replit build configuration:")
message(STATUS "  Eigen3: ${HAS_EIGEN3}")
message(STATUS "  ONNX Runtime: ${HAS_ONNX} (disabled for Replit)")
message(STATUS "  Rubber Band: ${HAS_RUBBERBAND} (disabled for Replit)")

# Define source files
set(SOURCES
    Source/PluginProcessor.cpp
    Source/PluginEditor.cpp
    Source/PitchCorrectionEngine.cpp
    Source/Parameters.cpp
    Source/PresetManager.cpp
    Source/ModeSelector.cpp
    Source/Utils.cpp
    Source/LookAndFeel.cpp
    Source/AIModelLoader.cpp
)

# Add plugin target for testing (Standalone only)
juce_add_plugin(AutoTunePlugin
    COMPANY_NAME "ReplicaStudio"
    IS_SYNTH FALSE
    NEEDS_MIDI_INPUT FALSE
    NEEDS_MIDI_OUTPUT FALSE
    IS_MIDI_EFFECT FALSE
    EDITOR_WANTS_KEYBOARD_FOCUS FALSE
    COPY_PLUGIN_AFTER_BUILD FALSE
    PLUGIN_MANUFACTURER_CODE "Repl"
    PLUGIN_CODE "ATun"
    FORMATS Standalone
    PRODUCT_NAME "AutoTune Plugin (Replit Test)"
)

# Add source files
target_sources(AutoTunePlugin PRIVATE ${SOURCES})

# Safe compiler definitions for Replit
target_compile_definitions(AutoTunePlugin
    PUBLIC
        JUCE_WEB_BROWSER=0
        JUCE_USE_CURL=0
        JUCE_VST3_CAN_REPLACE_VST2=0
        JUCE_DISPLAY_SPLASH_SCREEN=0
        JUCE_REPORT_APP_USAGE=0
        JUCE_STRICT_REFCOUNTEDPTR=1
        USE_EIGEN=$<BOOL:${HAS_EIGEN3}>
        USE_ONNX=0
        USE_CREPE=0
        USE_DDSP=0
        USE_RUBBERBAND=0
        REPLIT_BUILD=1
    PRIVATE
        JUCE_APPLICATION_NAME_STRING="$<TARGET_PROPERTY:AutoTunePlugin,JUCE_PLUGIN_NAME>"
        JUCE_APPLICATION_VERSION_STRING="$<TARGET_PROPERTY:AutoTunePlugin,JUCE_PLUGIN_VERSION>"
)

# Include directories
target_include_directories(AutoTunePlugin PRIVATE Source)

if(HAS_EIGEN3)
    target_include_directories(AutoTunePlugin PRIVATE ${EIGEN3_INCLUDE_DIR})
endif()

# Link libraries
target_link_libraries(AutoTunePlugin
    PRIVATE
        juce::juce_audio_utils
        juce::juce_audio_processors
        juce::juce_dsp
        juce::juce_gui_basics
        juce::juce_core
    PUBLIC
        juce::juce_recommended_config_flags
        juce::juce_recommended_lto_flags
)

message(STATUS "AutoTune Plugin configured for safe Replit testing")
message(STATUS "Note: This is a test build only - full functionality requires macOS")